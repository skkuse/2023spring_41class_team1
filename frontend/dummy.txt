
function Subject(props){
  return(
    <header>
        <h1><a href="/" onClick={(event)=>{
          event.preventDefault();
          props.onChangeMode();
        }}>{props.title}</a></h1>
        world wide web! asdf
    </header>
  )
}

function Nav(props){
  const lis=[

  ]
  for(let i=0;i<props.topics.length;i++){
    let t=props.topics[i];
    lis.push(<li key={t.id}>
      <a id={t.id} href={'/read/'+t.id} onClick={event=>{
        event.preventDefault();
        props.onChangeMode(Number(event.target.id));
      }}>{t.title}</a>
      </li>)
  }
  return(
    <nav>
        <ol>
            {lis}
        </ol>
    </nav>
  )
}

function Article(props){
  return(
    <article>
        <h2>{props.title}</h2>
        {props.body}
    </article>
  )
}

function Create(props){
  return(
    <article>
      <h2>Create</h2>
      <form onSubmit={event=>{
        event.preventDefault();
        const title = event.target.title.value;
        const body = event.target.body.value;
        props.onCreate(title,body);
      }}>
        <p><input type="text" name="title" placeholder='title'></input></p>
        <p><textarea name='body' placeholder='body'></textarea></p>
        <p><input type='submit' value='Create'></input></p>
      </form>
    </article>
  )
}

function Update(props){
  const[title,setTitle] = useState(props.title);
  const[body,setBody]=useState(props.body);
  return(
    <article>
      <h2>Update</h2>
      <form onSubmit={event=>{
        event.preventDefault();
        const title = event.target.title.value;
        const body = event.target.body.value;
        props.onUpdate(title,body);
      }}>
        <p><input type="text" name="title" placeholder='title' value={title} onChange={event=>{
          setTitle(event.target.value);
        }}></input></p>
        <p><textarea name='body' placeholder='body' value={body} onChange={event=>{
          setBody(event.target.value);
        }}></textarea></p>
        <p><input type='submit' value='Update'></input></p>
      </form>
    </article>
  )
}

function App() {
  const [mode,setMode] = useState('Welcome');
  const [id,setId] = useState(null);
  const [nextId,setNextId] = useState(4);
  const [topics,setTopics] = useState([
    {id:1, title:'html',body:'html is ...'},
    {id:2, title:'css',body:'css is ...'},
    {id:3, title:'java',body:'java is ...'}
  ])
  let content=null;
  let contextControl = null;
  if(mode ==='Welcome'){
    content = <Article title="Welcome" body="Hello, WEB"></Article> 
  }else if(mode ==='Read'){
    let title,body=null;
    for(let i=0;i<topics.length;i++){
      if(topics[i].id===id){
        title = topics[i].title;
        body = topics[i].body;
      }
    }
    content = <Article title={title} body={body}></Article> 
    contextControl = <>
      <li><a href={'/update/'+id} onClick={event=>{
        event.preventDefault();
        setMode('Update');

      }}>Update</a></li>
      <li><input type='button' value='Delete' onClick={()=>{
        const newTopics=[];
        for(let i=0;i<topics.length;i++){
          if(topics[i].id !==id){
            newTopics.push(topics[i]);
          }
        }
        setTopics(newTopics);
        setMode('Welcome');
      }}></input></li>
    </>
  }else if(mode ==='Create'){
    content = <Create onCreate={(title, body)=>{
      const newTopic ={id:nextId,title:title, body:body};
      const newTopics = [...topics];

      newTopics.push(newTopic);
      setTopics(newTopics);
      setMode('Read');
      setId(nextId);
      setNextId(nextId+1);
    }}></Create>
  }else if(mode ==='Update'){
    let title,body=null;
    for(let i=0;i<topics.length;i++){
      if(topics[i].id===id){
        title = topics[i].title;
        body = topics[i].body;
      }
    }
    content = <Update title={title} body={body} onUpdate={(title,body)=>{
      const updatedTopic = {id:id,title:title, body:body};
      const newTopics = [...topics];

      for(let i=0;i<newTopics.length;i++){
        if(newTopics[i].id===id){
          newTopics[i] = updatedTopic;
          break;
        }
      }
      setTopics(newTopics);
      setMode('Read');
    }}></Update>
  }
  return (
    <div className="App">
      <Subject title="REACT" onChangeMode={()=>{
        setMode('Welcome');
      }}></Subject>
      <Nav topics={topics} onChangeMode={(id)=>{
        setMode('Read');
        setId(id);
      }}></Nav>
      {content}
      <ul>
      <li><a href="/create" onClick={event=>{
        event.preventDefault();
        setMode('Create');
      }}>Create</a></li>
      {contextControl}
      
      </ul>
    </div>
  );
}